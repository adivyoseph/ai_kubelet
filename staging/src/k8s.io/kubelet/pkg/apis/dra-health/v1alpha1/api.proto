// Copyright 2025 The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package v1alpha1;
option go_package = "k8s.io/kubelet/pkg/apis/dra-health/v1alpha1";

service NodeHealth {
  rpc WatchResources(WatchResourcesRequest) returns (stream WatchResourcesResponse) {}
}

message WatchResourcesRequest {
  // Optional: Filter by driver or resource if needed in the future.
}

message DeviceHealth {
  // resource_name is the full system-wide identifier: "<driver name>/<pool name>/<device name>".
  string resource_name = 1;
  // pool_name identifies the pool within the driver.
  string pool_name = 2;
  // device_name identifies the device within the pool.
  string device_name = 3;
  // health is the device's status: "Healthy", "Unhealthy", "Unknown".
  string health = 4;
  // last_updated is the Unix timestamp (seconds) of the last health update.
  int64 last_updated = 5;
}

message WatchResourcesResponse {
  repeated DeviceHealth devices = 1;
}